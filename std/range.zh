/**
 * Range type for loops or something
 * example:
 * @ i 2..5: out i
 */

use operators

impl int
  fn next
    *slf = *slf + 1
  fn bool uneq int other
    <<< *slf != other
    
type Range: int begin end

impl Range
  fn int begin: <<< slf.begin
  fn int end: <<< slf.end

/**  begin..end */
op 9 Range .. int begin int end
  Range slf
  slf.begin = begin
  slf.end = end
  <<< slf
op 9 Range ..- int begin int end: <<< begin.. -end

fn int rangeMin: <<< -9223372036854775807
fn int rangeMax: <<< 9223372036854775807

/**  begin.. */
rop Range .. int begin: <<< begin..rangeMax()
/**  ..end */
lop Range .. int end: <<< rangeMin()..end
/**  ..-end */
lop Range ..- int end: <<< rangeMin().. -end
/**  -begin..end */
lop Range - Range r: <<< (-r.begin)..r.end


/**  begin..=end */
op 9 Range ..= int begin int end: <<< begin..(end+1)
/**  ..=end */
lop Range ..= int end: <<< rangeMin()..(end+1)
/**  ..=-end */
lop Range ..=- int end: <<< rangeMin()..(-end+1)


/** int in range */
op 10 bool == int i Range r
  ? r.begin < r.end: <<< r.begin <= i && i < r.end
  \ <<< r.end <= i && i < r.begin

  