use vec
use range
use out
use frog

// type Vec
//   int val

// impl Vec
//   fn ctor VecR v
//     out 'copy'
//     Vec slf
//     slf.val = v.val

// fn VecR add VecR v int n
//   v.val = v.val +n
//   <<< v


fn main
  v := iota(5 10)
  n := v.sub(2 5)
  v.print()
  n.print()

  v.push_back(54)
  v.push_back(54)
  v.push_back(54)
  v.push_back(54)
  v.print()
  n.print()

  out (&v as int)
  out (&n as int)
  @ i v
    out (*i)