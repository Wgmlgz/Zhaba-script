use vec
use range
use out
use frog

// type Vec
//   int val

// impl Vec
//   fn ctor VecR v
//     out 'copy'
//     Vec slf
//     slf.val = v.val

// fn VecR add VecR v int n
//   v.val = v.val +n
//   <<< v

fn main
  // Vec v
  // out v.val
  // a := add(v 3)
  // out a.val
  v := Vec<int>(10)
  // v.at(3) = 5
  // v.at(1) = 3

  a := v

  v.at(4) = 8
  v.at(1) = 1
  v.at(2) = 2


  a.at(2) = 8
  a.at(4) = 1
  a.at(5) = 2

  v.print()
  a.print()

  out (&v as int)
  out (&a as int)