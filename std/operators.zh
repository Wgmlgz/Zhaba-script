op 16 += u8R a u8 b: a=(a + b)
op 16 -= u8R a u8 b: a=(a - b)
op 16 /= u8R a u8 b: a=(a / b)
op 16 %= u8R a u8 b: a=(a % b)
op 16 *= u8R a u8 b: a=(a * b)
op 16 ^= u8R a u8 b: a=(a ^ b)
op 16 &= u8R a u8 b: a=(a & b)
op 16 |= u8R a u8 b: a=(a | b)

op 16 += u16R a u16 b: a=a + b
op 16 -= u16R a u16 b: a=a - b
op 16 /= u16R a u16 b: a=a / b
op 16 %= u16R a u16 b: a=a % b
op 16 *= u16R a u16 b: a=a * b
op 16 ^= u16R a u16 b: a=(a ^ b)
op 16 &= u16R a u16 b: a=(a & b)
op 16 |= u16R a u16 b: a=(a | b)

op 16 += u32R a u32 b: a=a + b
op 16 -= u32R a u32 b: a=a - b
op 16 /= u32R a u32 b: a=a / b
op 16 %= u32R a u32 b: a=a % b
op 16 *= u32R a u32 b: a=a * b
op 16 ^= u32R a u32 b: a=(a ^ b)
op 16 &= u32R a u32 b: a=(a & b)
op 16 |= u32R a u32 b: a=(a | b)

op 16 += u64R a u64 b: a=a + b
op 16 -= u64R a u64 b: a=a - b
op 16 /= u64R a u64 b: a=a / b
op 16 %= u64R a u64 b: a=a % b
op 16 *= u64R a u64 b: a=a * b
op 16 ^= u64R a u64 b: a=(a ^ b)
op 16 &= u64R a u64 b: a=(a & b)
op 16 |= u64R a u64 b: a=(a | b)


op 16 += i8R a i8 b: a=a + b
op 16 -= i8R a i8 b: a=a - b
op 16 /= i8R a i8 b: a=a / b
op 16 %= i8R a i8 b: a=a % b
op 16 *= i8R a i8 b: a=a * b
op 16 ^= i8R a i8 b: a=(a ^ b)
op 16 &= i8R a i8 b: a=(a & b)
op 16 |= i8R a i8 b: a=(a | b)

op 16 += i16R a i16 b: a=a + b
op 16 -= i16R a i16 b: a=a - b
op 16 /= i16R a i16 b: a=a / b
op 16 %= i16R a i16 b: a=a % b
op 16 *= i16R a i16 b: a=a * b
op 16 ^= i16R a i16 b: a=(a ^ b)
op 16 &= i16R a i16 b: a=(a & b)
op 16 |= i16R a i16 b: a=(a | b)

op 16 += i32R a i32 b: a=a+b
op 16 -= i32R a i32 b: a=a-b
op 16 /= i32R a i32 b: a=a/b
op 16 %= i32R a i32 b: a=a%b
op 16 *= i32R a i32 b: a=a*b
op 16 ^= i32R a i32 b: a=(a^b)
op 16 &= i32R a i32 b: a=(a&b)
op 16 |= i32R a i32 b: a=(a|b)

op 16 += i64R a i64 b: a=a+b
op 16 -= i64R a i64 b: a=a-b
op 16 /= i64R a i64 b: a=a/b
op 16 %= i64R a i64 b: a=a%b
op 16 *= i64R a i64 b: a=a*b
op 16 ^= i64R a i64 b: a=(a^b)
op 16 &= i64R a i64 b: a=(a&b)
op 16 |= i64R a i64 b: a=(a|b)
lop i64R ++ i64R x: x+=1; <<<x
lop i64R -- i64R x: x-=1; <<<x
rop i64 ++ i64R x: t:=x; x+=1; <<<t
rop i64 -- i64R x: t:=x; x-=1; <<<t
op 5 bool %% i64 a i64 b: <<< !(a % b)
op 5 bool !% i64 a i64 b: <<< !(a %% b)

op 16 += f32R a f32 b: a=a+b
op 16 -= f32R a f32 b: a=a-b
op 16 /= f32R a f32 b: a=a/b
op 16 *= f32R a f32 b: a=a*b

op 16 += f64R a f64 b: a=a+b
op 16 -= f64R a f64 b: a=a-b
op 16 /= f64R a f64 b: a=a/b
op 16 *= f64R a f64 b: a=a*b

op 4 int ** int a int n
  res := 1
  @ n != 0
    ? n !% 2: res *= a
    a *= a
    n /= 2
  <<< res
