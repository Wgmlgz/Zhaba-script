use util

type IntOpMaker T: bool unused

impl IntOpMaker
  op 17 += TR a T b: a=a+b
  op 17 -= TR a T b: a=a-b
  op 17 /= TR a T b: a=a/b
  op 17 %= TR a T b: a=a%b
  op 17 *= TR a T b: a=a*b
  op 17 ^= TR a T b: a=(a^b)
  op 17 &= TR a T b: a=(a&b)
  op 17 |= TR a T b: a=(a|||b)
  op 5 bool %% T a T b: <<< !(a % b)
  op 5 bool !% T a T b: <<< !(a %% b)
  lop TR ++ TR x: x+=(T() - ~T()); <<<x
  lop TR -- TR x: x-=(T() - ~T()); <<<x
  rop T ++ TR x: t:=x; x+=(T() - ~T()); <<<t
  rop T -- TR x: t:=x; x-=(T() - ~T()); <<<t

fn intOpMaker
  IntOpMaker<i8> a 
  IntOpMaker<i16> b 
  IntOpMaker<i32> c 
  IntOpMaker<i64> d
  
  IntOpMaker<u8> a1 
  IntOpMaker<u16> b1 
  IntOpMaker<u32> c1 
  IntOpMaker<u64> d1 

  IntOpMaker<char> aboba 

op 17 += f32R a f32 b: a=a+b
op 17 -= f32R a f32 b: a=a-b
op 17 /= f32R a f32 b: a=a/b
op 17 *= f32R a f32 b: a=a*b

op 17 += f64R a f64 b: a=a+b
op 17 -= f64R a f64 b: a=a-b
op 17 /= f64R a f64 b: a=a/b
op 17 *= f64R a f64 b: a=a*b

op 9 bool < bool a bool b: <<< !a && b

op 4 int ** int a int n
  res := 1
  @ n != 0
    ? n !% 2: res *= a
    a *= a
    n /= 2
  <<< res
