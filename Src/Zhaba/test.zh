include 'std.zh'

type Vec
  int x y

fn Vec newVec
  Vec v
  v.x = 0
  <<< v

impl Vec
  fn int getX
    <<< self.x
  fn int getY
    <<< self.y
  fn setX int x
    self.x = x
  fn setY int y
    self.y = y

impl int
  fn str to_str
    str s
    #'s = std::to_string(*self)'
    <<< s

fn int vecGet VecP v
  <<< v.x

fn vecSet VecP v int val
  v.x = val

op 2 memCall Vec v int a int b
  out 'wow member call!!!'


fn main
  // auto v = newVec()
  // auto setX = 2
  // v.setX(54)
  // v.setY(228)
  // out v.getX()
  // out v.getY()
  // out setX
  auto dva = 2
  out dva.to_str()
  
