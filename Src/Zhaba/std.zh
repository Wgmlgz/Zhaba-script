lop 3  int -  int a:       #return -a;
lop 3  int +  int a:       #return +a;
lop 3  int !  int a:       #return !a;
op 5  int /  int a int b: #return a / b;
op 5  int %  int a int b: #return a % b;
op 5  int *  int a int b: #return a * b;
op 5  int %% int a int b: #return !(a % b);
op 6  int +  int a int b: #return a + b;
op 6  int -  int a int b: #return a - b;
op 9  int <  int a int b: #return a < b;
op 9  int >  int a int b: #return a > b;
op 9  int <= int a int b: #return a <= b;
op 9  int >= int a int b: #return a >= b;
op 10 int == int a int b: #return a == b;
op 10 int != int a int b: #return a != b;
op 14 int && int a int b: #return a && b;
op 15 int || int a int b: #return a || b;

lop out int x: #'printf("%d\n",x);'
lop out str s: #'printf("%s\n",s.c_str());'
lop outs int i: #'printf("%d ", i);'

op 10 .= int ptr int val: #'*((int64_t*)(ptr))=val;'
lop int ptr_get int ptr: #return *(int64_t*)(ptr);
lop int malloc int size: #return (int64_t)(malloc(size));
lop free int p: #free((void*)p);