// use 'std.zh'
// use 'vec.zh'
// use 'range.zh'
// use 'tuple.zh'
// use 'util.zh'
// use 'frog.zh'
// use 'str.zh'

fn add
  d := 2
  c := 3
  d = (d + c + 666)

/*

0005  push_bytes 16  - init local

000a  push_i64 8     - assign a
0013  push_i64 2
001c  assign 8
0021  pop_bytes 0

0026  push_i64 0     - assign c
002f  push_i64 3
0038  assign 8
003d  pop_bytes 0

0042  push_i64 8     - a addr
004b  push_i64 8     - push a val
0054  deref 8
0059  push_i64 0     - push c val
0062  deref 8
0067  add_i64        - add 
0068  assign 8       - set a 
006d  pop_bytes 0
0072  pop_bytes 16   - clear local

*/
// fn main
//   a := 2
//   b := 3
//   add(a b)
  // out 'str and str examples'
  // out ''
  // out ''

  // deb('stlen(\'12345\')', strlen('12345'))
  // s := asStr('')
  // a := 'toad'
  // b := asStr(' frog')

  // deb('s(Str)', s)
  // deb('a(str)', a)
  // deb('b(Str)', b)
  // out ''

  // s += a
  // s += b
  // deb('s + a + b', s)
  // out ''
  
  // deb('before sort', s)
  // s.sort()
  // deb('after sort', s)
  // frog := frog()
  // out frog

  // frog.dtor()
  // s.dtor()
  // b.dtor()
